/***************************************************************************
 *                                                                         *
 * Auto Generated BY CodeComment                                           *
 * Copyright(C) 2000-2016, JiangSu Yinhe Electronic Co.Ltd.                *
 * All Rights Reserved.                                                    *
 * THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF Yinhe Elec Co.Ltd.       *
 * The copyright notice above does not evidence any actual or intended     *
 * publication of such source code.                                        *
 *                                                                         *
 **************************************************************************/

package com.yinhe.server.AcsServer.auth;

import java.util.logging.Logger;

import javax.inject.Inject;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;

import com.yinhe.server.AcsServer.controller.LoginBean;


public class EmployeeSessionListener implements HttpSessionListener, HttpSessionAttributeListener {
	@Inject
	private Logger log;

	@Override
	public void sessionCreated(HttpSessionEvent se) {
		log.info("[sessionCreated] session created!");
	}

	@Override
	public void sessionDestroyed(HttpSessionEvent se) {
		Object loginUserName = se.getSession().getAttribute(LoginBean.m_loginUserName);
		if (loginUserName != null) {
			String contextKeyString = LoginBean.m_loginUserName + loginUserName;
			javax.servlet.ServletContext servletContext = se.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 0 : count - 1;
				
				if (count <= 0) {
					servletContext.removeAttribute(contextKeyString);
				} else {
					servletContext.setAttribute(contextKeyString, count);
				}
				log.info("[sessionDestroyed] loginUserName:" + loginUserName + ", ApplocationLoginCount:" + count);
			}
		}
		
		//new add
		Object loginIP = se.getSession().getAttribute(LoginBean.m_loginIP);
		if (loginIP != null) {
			String contextKeyString = LoginBean.m_loginIP + loginIP;
			javax.servlet.ServletContext servletContext = se.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 0 : count - 1;
				
				if (count <= 0) {
					servletContext.removeAttribute(contextKeyString);
				} else {
					servletContext.setAttribute(contextKeyString, count);
				}
				log.info("[sessionDestroyed] loginIP:" + loginIP + ", ApplocationLoginCount:" + count);
			}
		}
	}

	@Override
	public void attributeAdded(HttpSessionBindingEvent event) {
		if (event.getName().equals(LoginBean.m_loginUserName)) {
			String contextKeyString = LoginBean.m_loginUserName + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 1 : count + 1;
				servletContext.setAttribute(contextKeyString, count);
				log.info("[attributeAdded] loginUserName:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}else if (event.getName().equals(LoginBean.m_loginIP)) {   //new add 
			String contextKeyString = LoginBean.m_loginIP + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 1 : count + 1;
				servletContext.setAttribute(contextKeyString, count);
				log.info("[attributeAdded] m_loginIP:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}
	}

	@Override
	public void attributeRemoved(HttpSessionBindingEvent event) {
		if (event.getName().equals(LoginBean.m_loginUserName)) {
			String contextKeyString = LoginBean.m_loginUserName + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 0 : count - 1;
				
				if (count <= 0) {
					servletContext.removeAttribute(contextKeyString);
				} else {
					servletContext.setAttribute(contextKeyString, count);
				}
				log.info("[attributeRemoved] loginUserName:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}else if (event.getName().equals(LoginBean.m_loginIP)) {  //new add 
			String contextKeyString = LoginBean.m_loginIP + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 0 : count - 1;
				
				if (count <= 0) {
					servletContext.removeAttribute(contextKeyString);
				} else {
					servletContext.setAttribute(contextKeyString, count);
				}
				log.info("[attributeRemoved] loginIP:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}
	}

	@Override
	public void attributeReplaced(HttpSessionBindingEvent event) {
		if (event.getName().equals(LoginBean.m_loginUserName)) {
			String contextKeyString = LoginBean.m_loginUserName + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 1 : count;
				servletContext.setAttribute(contextKeyString, count);
				log.info("[attributeReplaced] loginUserName:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}else if (event.getName().equals(LoginBean.m_loginIP)) {
			String contextKeyString = LoginBean.m_loginIP + event.getValue();
			javax.servlet.ServletContext servletContext = event.getSession().getServletContext();
			Object ocount = servletContext.getAttribute(contextKeyString);
			
			if (null == ocount || ocount instanceof Integer) {
				Integer count = (Integer)ocount;
				count = count == null ? 1 : count;
				servletContext.setAttribute(contextKeyString, count);
				log.info("[attributeReplaced] loginIP:" + event.getValue() + ", ApplocationLoginCount:" + count);
			}
		}
	}
}
