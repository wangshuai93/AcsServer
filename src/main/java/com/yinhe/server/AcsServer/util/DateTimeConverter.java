/***************************************************************************
 *                                                                         *
 * Auto Generated BY CodeComment                                           *
 * Copyright(C) 2000-2016, JiangSu Yinhe Electronic Co.Ltd.                *
 * All Rights Reserved.                                                    *
 * THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF Yinhe Elec Co.Ltd.       *
 * The copyright notice above does not evidence any actual or intended     *
 * publication of such source code.                                        *
 *                                                                         *
 **************************************************************************/

package com.yinhe.server.AcsServer.util;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;

public class DateTimeConverter implements Converter{

	@Override
	public Object getAsObject(FacesContext context, UIComponent component,
			String value) {
		if (Resources.isNullOrEmpty(value)) {
			return null;
		}
		
		String datePattern = (String)component.getAttributes().get("datePattern");
		
		try {
			datePattern = (String)component.getAttributes().get("datePattern");
			if (null == datePattern) {
				System.out.println("[getAsObject] datePattern null, will be set 'yyyy-MM-dd hh:mm:ss'");
				datePattern = "yyyy-MM-dd hh:mm:ss";
			}
			return new SimpleDateFormat(datePattern).parse(value);
		} catch (ParseException e) {
			System.out.println("[getAsObject] DateParseError, value:" + value.toString() + ", datePattern:" + datePattern);
			try {
				datePattern = "yyyy-MM-dd hh:mm:ss";
				return new SimpleDateFormat(datePattern).parse(value);
			} catch (ParseException e1) {
				e1.printStackTrace();
			}
		}
		return null;
	}

	@Override
	public String getAsString(FacesContext context, UIComponent component,
			Object value) {
		if (value instanceof Date) {
			String datePattern = (String)component.getAttributes().get("datePattern");
			if (null == datePattern) {
				System.out.println("[getAsString] datePattern null, will be set 'yyyy-MM-dd hh:mm:ss'");
				datePattern = "yyyy-MM-dd hh:mm:ss";
			}
			
			try {
				return new SimpleDateFormat(datePattern).format(value);
			} catch (IllegalArgumentException e) {
				System.out.println("[getAsString] DateParseError, value:" + value.toString() + ", datePattern:" + datePattern);
				datePattern = "yyyy-MM-dd hh:mm:ss";
				return new SimpleDateFormat(datePattern).format(value);
			}
		}
		
		System.out.println("[getAsString] excpetion: Object not Date " + value.toString());
		return value.toString();
	}
	

}
